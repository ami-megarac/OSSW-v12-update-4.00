--- linux_patch296/security/keys/encrypted-keys/encrypted.c	2020-03-25 13:06:50.000000000 +0300
+++ linux/security/keys/encrypted-keys/encrypted.c	2020-03-26 05:52:50.258101547 +0300
@@ -845,6 +845,8 @@
 	size_t datalen = prep->datalen;
 	int ret = 0;
 
+	if (test_bit(KEY_FLAG_NEGATIVE, &key->flags))
+		return -ENOKEY;
 	if (datalen <= 0 || datalen > 32767 || !prep->data)
 		return -EINVAL;
 
--- linux_patch296/security/keys/trusted.c	2020-03-25 13:06:50.000000000 +0300
+++ linux/security/keys/trusted.c	2020-03-26 05:55:23.587080224 +0300
@@ -984,13 +984,16 @@
  */
 static int trusted_update(struct key *key, struct key_preparsed_payload *prep)
 {
-	struct trusted_key_payload *p = key->payload.data;
+	struct trusted_key_payload *p;
 	struct trusted_key_payload *new_p;
 	struct trusted_key_options *new_o;
 	size_t datalen = prep->datalen;
 	char *datablob;
 	int ret = 0;
 
+	if (test_bit(KEY_FLAG_NEGATIVE, &key->flags))
+		return -ENOKEY;
+	p = key->payload.data[0];
 	if (!p->migratable)
 		return -EPERM;
 	if (datalen <= 0 || datalen > 32767 || !prep->data)
